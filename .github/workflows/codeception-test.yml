name: Run WordPress Codeception Tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
      - master

jobs:
  test:
    name: Testing ${{ matrix.suite }}${{ matrix.group && format(' ({0})', matrix.group) || '' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - suite: integration
          - suite: functional
          - suite: acceptance
            group: frontend
          - suite: acceptance
            group: backend
          # Add more suites/groups as needed

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Copy .env for CI
        run: cp ./tests/.env.ci ./tests/.env

      - name: Start Docker Services
        run: docker compose up -d

      - name: Make proxy network available
        run: docker network create proxy

      - name: Wait for Database to be ready
        run: |
          echo "Waiting for Database..."
          until docker compose exec db mysqladmin ping -h "localhost" --silent; do
            echo "Still waiting for MySQL server to start..."
            sleep 5
          done
          echo "MySQL server is up."
          until docker compose exec db mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS test;"; do
            echo "Still waiting for test database to be ready..."
            sleep 5
          done
          echo "Test Database is ready."

      - name: Wait for WordPress to be ready
        run: |
          echo "Waiting for WordPress Web..."
          until curl --fail --silent --output /dev/null http://localhost:8081; do
            echo "Still waiting for WordPress Web..."
            sleep 5
          done
          echo "WordPress Web is ready."

      - name: Run Setup (Composer, WP CLI, etc)
        run: docker compose exec wordpress sh -c "composer install --no-interaction --no-progress --optimize-autoloader && wp core install --url='http://localhost:8081' --title='Test Site' --admin_user=admin --admin_password=admin --admin_email=admin@example.com --skip-email"

      - name: Run Codeception Tests for ${{ matrix.suite }}
        run: |
          if [ "${{ matrix.group }}" != "" ]; then
            docker compose exec wordpress sh -c "vendor/bin/codecept run ${{ matrix.suite }} --group ${{ matrix.group }} -d -f --no-interaction --skip-group=skipCI --html"
          else
            docker compose exec wordpress sh -c "vendor/bin/codecept run ${{ matrix.suite }} -d -f --no-interaction --skip-group=skipCI --html"
          fi

      - name: Copy Test Artifacts (always)
        if: always()
        run: |
          mkdir -p test-artifacts/${{ matrix.suite }}-${{ matrix.group || 'default' }}
          cp -v tests/_output/* test-artifacts/${{ matrix.suite }}-${{ matrix.group || 'default' }}/ || true
          cp -v wp-content/debug.log test-artifacts/${{ matrix.suite }}-${{ matrix.group || 'default' }}/ || true
          cp -v /var/log/php_errors.log test-artifacts/${{ matrix.suite }}-${{ matrix.group || 'default' }}/ || true

      - name: Upload Artifacts for Suite
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.suite }}-${{ matrix.group || 'default' }}-output-${{ github.sha }}
          path: test-artifacts/${{ matrix.suite }}-${{ matrix.group || 'default' }}/

      - name: Teardown
        if: always()
        run: docker compose down -v
